<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.osznconnection.file.service.AddressCorrectionBean">
    <resultMap id="cityCorrection" type="org.complitex.osznconnection.file.entity.Correction"
               extends="org.complitex.osznconnection.file.service.CorrectionBean.correction">
    </resultMap>

    <resultMap id="streetCorrection" type="org.complitex.osznconnection.file.entity.Correction"
               extends="org.complitex.osznconnection.file.service.CorrectionBean.correction">
        <association property="parent" column="parent_id" select="selectCityCorrection"
                javaType="org.complitex.osznconnection.file.entity.Correction"/>
    </resultMap>

    <resultMap id="buildingCorrection" type="org.complitex.osznconnection.file.entity.BuildingCorrection"
               extends="org.complitex.osznconnection.file.service.CorrectionBean.correction">
        <result column="correction_corp" property="correctionCorp"/>

        <association property="parent" column="parent_id" select="selectStreetCorrection"
                     javaType="org.complitex.osznconnection.file.entity.Correction"/>
    </resultMap>

    <select id="selectCityCorrection" resultMap="cityCorrection" parameterType="long">
        select * from `city_correction` where `id` = #{id}
    </select>

    <select id="selectStreetCorrection" resultMap="streetCorrection" parameterType="long">
        select * from `street_correction` where `id` = #{id}
    </select>

    <select id="selectBuildingCorrection" resultMap="buildingCorrection" parameterType="long">
        select * from `building_correction` where `id` = #{id}
    </select>

    <select id="findCorrectionAddress" parameterType="map"
             resultMap="org.complitex.osznconnection.file.service.CorrectionBean.correction">
        SELECT
            *
        FROM
            `${entityTable}_correction`
        <where>
            `organization_id` = #{organizationId} AND TRIM(`correction`) = TRIM(#{correction})
            <if test="parentId != null">AND `parent_id` = #{parentId}</if>
        </where>

        LIMIT 1
    </select>

    <select id="findCorrectionBuilding" parameterType="map" resultMap="buildingCorrection">
        SELECT
            *
        FROM
            `building_correction`
        WHERE
            `organization_id` = #{organizationId} AND TRIM(`correction`) = TRIM(#{correction})
                AND TRIM(`correction_corp`) = TRIM(#{correctionCorp}) AND `parent_id` = #{parentId}
        LIMIT 1
    </select>

    <select id="findCorrectionEntityType" resultType="long" parameterType="long">
        SELECT etc.`entity_type_id` typeId
        FROM `entity_type_correction` etc
        WHERE etc.`organization_id` = #{organizationId}
        AND EXISTS(SELECT 1 FROM `entity_type` et WHERE et.`id` = etc.`entity_type_id` AND et.`end_date` IS NULL)
    </select>

    <insert id="insertBuilding" parameterType="org.complitex.osznconnection.file.entity.BuildingCorrection">
        INSERT INTO `building_correction`(`organization_id`, `parent_id`, `correction`, `correction_corp`, `object_id`,
            `organization_code`, `internal_organization_id`)
         VALUES (#{organizationId}, #{parentId}, #{correction}, #{correctionCorp}, #{objectId}, #{code},
            #{internalOrganizationId})
    </insert>

    <select id="findOutgoingAddress" resultMap="org.complitex.osznconnection.file.service.CorrectionBean.correction"
            parameterType="org.complitex.osznconnection.file.entity.Correction">
        SELECT c.`correction`, c.`organization_code` FROM `${entity}_correction` c
        WHERE c.`organization_id` = #{organizationId}
        AND c.`object_id` = #{objectId}
    </select>

    <select id="findOutgoingBuilding" resultMap="org.complitex.osznconnection.file.service.AddressCorrectionBean.buildingCorrection"
            parameterType="org.complitex.osznconnection.file.entity.BuildingCorrection">
        SELECT c.`correction`, c.`correction_corp`, c.`organization_code` FROM `building_correction` c
        WHERE c.`organization_id` = #{organizationId}
        AND c.`object_id` = #{objectId}
    </select>

    <select id="findOutgoingEntityType" resultMap="org.complitex.osznconnection.file.service.CorrectionBean.entityTypeCorrection"
            parameterType="org.complitex.osznconnection.file.entity.EntityTypeCorrection">
        SELECT etc.`type` correction, etc.`organization_type_code` code
        FROM `entity_type_correction` etc
        WHERE etc.`organization_id` = #{organizationId}
        AND etc.`entity_type_id` = #{objectId}
    </select>

    <select id="findOutgoingDistrict" resultMap="org.complitex.osznconnection.file.service.CorrectionBean.correction"
            parameterType="hashmap">
        SELECT c.`correction`, c.`organization_code` FROM `district_correction` c
        WHERE c.`organization_id` = #{calculationCenterId}
        AND c.`object_id` = (SELECT oa.`value_id` FROM `organization_attribute` oa WHERE
        oa.`status` = 'ACTIVE' AND oa.`attribute_type_id` = 902
        AND oa.`object_id` = #{osznId})
    </select>

    <select id="findInternalObjectId" parameterType="hashmap" resultType="long">
        SELECT e.`object_id` FROM `${entity}` e WHERE e.`status` = 'ACTIVE'
        <if test="internalParentId != null">
            AND e.`parent_id` = #{parentId}
        </if>
        <if test="entityTypeId != null">
            AND e.`entity_type_id` = #{entityTypeId}
        </if>
        AND EXISTS(
        SELECT 1 FROM `${entity}_attribute` attr WHERE attr.`status` = 'ACTIVE' AND e.`object_id` = attr.`object_id`
        AND attr.`attribute_type_id` = #{attributeTypeId}
        AND attr.`value_id` IN (
        SELECT sc.`id` FROM `${entity}_string_culture` sc WHERE sc.`value` = TRIM(TO_CYRILLIC(#{correction}))))
    </select>

    <select id="findInternalBuilding" parameterType="hashmap" resultType="long">
        SELECT b.`object_id` FROM `building` b WHERE b.`status` = 'ACTIVE'
        <if test="internalParentId != null">
            AND b.`parent_id` = #{parentId}
        </if>
        AND EXISTS(
        SELECT 1 FROM `building_attribute` a_num
        JOIN `building_attribute` a_street
        ON ((a_num.`attribute_id` = a_street.`attribute_id`) AND (a_num.`object_id` = a_street.`object_id`) AND (a_street.`attribute_type_id` = 503)
        AND (a_street.`status` = 'ACTIVE'))
        LEFT JOIN `building_attribute` a_corp
        ON ((a_num.`attribute_id` = a_corp.`attribute_id`) AND (a_num.`object_id` = a_corp.`object_id`) AND (a_corp.`attribute_type_id` = 501)
        AND (a_corp.`status` = 'ACTIVE'))
        WHERE a_num.`attribute_type_id` = 500 AND a_num.`status` = 'ACTIVE' AND b.`object_id` = a_num.`object_id`
        AND a_num.`value_id` IN (
        SELECT sc.`id` FROM `building_string_culture` sc WHERE sc.`value` = TO_CYRILLIC(#{number}))
        AND a_street.`value_id` = #{streetId}
        <choose>
            <when test="corp != null">
                AND a_corp.`value_id` IN (
                SELECT sc.`id` FROM `building_string_culture` sc WHERE sc.`value` = TO_CYRILLIC(#{corp}))
            </when>
            <otherwise>
                AND ((a_corp.`value_id` IN (SELECT sc.`id` FROM `building_string_culture` sc WHERE (sc.`value` IS NULL) OR TRIM(sc.`value`) = '')) OR
                (a_corp.`value_id` NOT IN (SELECT sc.`id` FROM `building_string_culture` sc)))
            </otherwise>
        </choose>
        )
    </select>

    <update id="updateBuilding" parameterType="org.complitex.osznconnection.file.entity.BuildingCorrection">
        UPDATE `building_correction` SET `organization_id` = #{organizationId}, `correction` = #{correction}, `correction_corp` = #{correctionCorp},
        `object_id` = #{objectId}, `organization_code` = #{code}, `internal_organization_id` = #{internalOrganizationId}
        WHERE `id` = #{id}
    </update>

    <select id="findBuildingById" parameterType="_long" resultMap="buildingCorrection">
        SELECT * FROM `building_correction` WHERE `id` = #{id}
    </select>

    <select id="findBuildings" parameterType="org.complitex.osznconnection.file.entity.example.CorrectionExample"
            resultMap="buildingCorrection">
        SELECT c.*,
        (SELECT osc.`value` FROM `organization_string_culture` osc WHERE osc.`locale` = #{locale} AND osc.`id` IN
            (SELECT oa.`value_id` FROM `organization_attribute` oa WHERE oa.`status` = 'ACTIVE'
             AND oa.`object_id` = c.`organization_id` AND oa.`attribute_type_id` = 900)
        ) organization,
        IFNULL((SELECT osc.`value` FROM `organization_string_culture` osc WHERE osc.`locale` = #{locale} AND osc.`id` IN
            (SELECT oa.`value_id` FROM `organization_attribute` oa WHERE oa.`status` = 'ACTIVE'
                AND oa.`object_id` = c.`internal_organization_id` AND oa.`attribute_type_id` = 900)),
            (SELECT osc.`value` FROM `organization_string_culture` osc WHERE osc.`locale` =
                (SELECT l.`locale` FROM `locales` l WHERE l.`system` = 1) AND osc.`id` IN (SELECT oa.`value_id`
                FROM `organization_attribute` oa WHERE oa.`status` = 'ACTIVE'
                AND oa.`object_id` = c.`internal_organization_id` AND oa.`attribute_type_id` = 900))
        ) internalOrganization
        FROM `building_correction` c
        <include refid="org.complitex.osznconnection.file.service.CorrectionBean.filter"/>
        <if test="orderByClause != null">
            ORDER BY ${orderByClause}
            <choose>
                <when test="asc">
                    ASC
                </when>
                <otherwise>
                    DESC
                </otherwise>
            </choose>
        </if>
        LIMIT #{start},#{size}
    </select>

    <delete id="deleteBuilding" parameterType="org.complitex.osznconnection.file.entity.BuildingCorrection">
        DELETE FROM `building_correction` WHERE `id` = #{id}
    </delete>

</mapper>