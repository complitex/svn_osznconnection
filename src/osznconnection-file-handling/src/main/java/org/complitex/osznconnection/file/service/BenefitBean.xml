<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.osznconnection.file.service.BenefitBean">
    <resultMap id="benefitResultMap" type="org.complitex.osznconnection.file.entity.Benefit">
        <id column="id" property="id"/>
        <result column="request_file_id" property="requestFileId"/>
        <result column="account_number" property="accountNumber"/>
        <result column="status" property="status"/>

        <result column="city" property="city"/>
        <result column="street" property="street"/>
        <result column="building_number" property="buildingNumber"/>
        <result column="building_corp" property="buildingCorp"/>
        <result column="apartment" property="apartment"/>

        <association property="dbfFields" javaType="map">
            <result column="OWN_NUM" property="OWN_NUM"/>
            <result column="REE_NUM" property="REE_NUM"/>
            <result column="OWN_NUM_SR" property="OWN_NUM_SR"/>
            <result column="FAM_NUM" property="FAM_NUM"/>
            <result column="SUR_NAM" property="SUR_NAM"/>
            <result column="F_NAM" property="F_NAM"/>
            <result column="M_NAM" property="M_NAM"/>
            <result column="IND_COD" property="IND_COD"/>
            <result column="PSP_SER" property="PSP_SER"/>
            <result column="PSP_NUM" property="PSP_NUM"/>
            <result column="OZN" property="OZN"/>
            <result column="CM_AREA" property="CM_AREA"/>
            <result column="HEAT_AREA" property="HEAT_AREA"/>
            <result column="OWN_FRM" property="OWN_FRM"/>
            <result column="HOSTEL" property="HOSTEL"/>
            <result column="PRIV_CAT" property="PRIV_CAT"/>
            <result column="ORD_FAM" property="ORD_FAM"/>
            <result column="OZN_SQ_ADD" property="OZN_SQ_ADD"/>
            <result column="OZN_ABS" property="OZN_ABS"/>
            <result column="RESERV1" property="RESERV1"/>
            <result column="RESERV2" property="RESERV2"/>
        </association>
    </resultMap>

    <select id="selectBenefits" resultMap="benefitResultMap" parameterType="long">
        select * from `benefit` where `request_file_id` = #{id}
    </select>

    <insert id="insertBenefit" parameterType="org.complitex.osznconnection.file.entity.Benefit">
        insert into `benefit`
        (
        <trim suffixOverrides=",">
            `request_file_id`, `account_number`, `status`,
            <foreach collection="dbfFields.keys" item="key">
                `${key}`,
            </foreach>
        </trim>
        )
        values
        (
        <trim suffixOverrides=",">
            #{requestFileId}, #{accountNumber}, #{status},
            <foreach collection="dbfFields.keys" item="key">
                #{dbfFields.${key}},
            </foreach>
        </trim>
        )
    </insert>

    <update id="updateBenefit" parameterType="org.complitex.osznconnection.file.entity.Benefit">
        update `benefit`
        <set>
            `request_file_id` = #{requestFileId}, `account_number` = #{accountNumber}, `status` = #{status},
            <foreach collection="dbfFields.keys" item="key">
                `${key}` = #{dbfFields[key]},
            </foreach>
        </set>
        where
        `id` = #{id}
    </update>

    <delete id="deleteBenefits" parameterType="long">
        delete from `benefit` where `request_file_id` = #{id};
    </delete>

    <sql id="filter">
        <if test="firstName != null">
            AND r.`F_NAM` LIKE CONCAT('%',#{firstName},'%')
        </if>
        <if test="middleName != null">
            AND r.`M_NAM` LIKE CONCAT('%',#{middleName},'%')
        </if>
        <if test="lastName != null">
            AND r.`SUR_NAM` LIKE CONCAT('%',#{lastName},'%')
        </if>

        <if test="city != null">
            AND p.`N_NAME` LIKE CONCAT('%', #{city}, '%')
        </if>
        <if test="street != null">
            AND p.`VUL_NAME` LIKE CONCAT('%', #{street}, '%')
        </if>
        <if test="building != null">
            AND (p.`BLD_NUM` LIKE CONCAT('%', #{building}, '%') OR p.`CORP_NUM` LIKE CONCAT('%', #{building}, '%'))
        </if>
        <if test="apartment != null">
            AND p.`FLAT` LIKE CONCAT('%', #{apartment}, '%')
        </if>

        <if test="status != null">
            AND r.`status` = #{status}
        </if>
    </sql>

    <select id="count" resultType="int" parameterType="org.complitex.osznconnection.file.entity.example.BenefitExample">
        SELECT COUNT(DISTINCT r.`id`) FROM `benefit` r
        JOIN `request_file` rf ON r.`request_file_id` = rf.`id`
        LEFT JOIN `payment` p ON r.`OWN_NUM_SR` = p.`OWN_NUM_SR`
        LEFT JOIN `request_file` pf ON p.`request_file_id` = pf.`id`
        WHERE (pf.`organization_object_id` IS NULL OR rf.`organization_object_id` = pf.`organization_object_id`) AND (pf.`date` IS NULL OR EXTRACT(YEAR_MONTH FROM rf.`date`) = EXTRACT(YEAR_MONTH FROM pf.`date`))
        AND r.`request_file_id` = #{requestFileId}
        <include refid="org.complitex.osznconnection.file.service.BenefitBean.filter"/>
    </select>

    <select id="find" resultMap="benefitResultMap"
            parameterType="org.complitex.osznconnection.file.entity.example.BenefitExample">
        SELECT DISTINCT r.`id` id, r.`request_file_id`, r.`F_NAM`, r.`M_NAM`, r.`SUR_NAM`,
        r.`status`,
        p.`N_NAME` city, p.`VUL_NAME` street, p.`BLD_NUM` building_number, p.`CORP_NUM` building_corp, p.`FLAT` apartment
        FROM `benefit` r
        JOIN `request_file` rf ON r.`request_file_id` = rf.`id`
        LEFT JOIN `payment` p ON r.`OWN_NUM_SR` = p.`OWN_NUM_SR`
        LEFT JOIN `request_file` pf ON p.`request_file_id` = pf.`id`
        WHERE (pf.`organization_object_id` IS NULL OR rf.`organization_object_id` = pf.`organization_object_id`) AND (pf.`date` IS NULL OR EXTRACT(YEAR_MONTH FROM rf.`date`) = EXTRACT(YEAR_MONTH FROM pf.`date`))
        AND r.`request_file_id` = #{requestFileId}
        <include refid="org.complitex.osznconnection.file.service.BenefitBean.filter"/>
        <if test="orderByClause != null">
            ORDER BY ${orderByClause}
            <choose>
                <when test="asc">
                    ASC
                </when>
                <otherwise>
                    DESC
                </otherwise>
            </choose>
        </if>
        <if test="size != 0">
            limit #{start},#{size}
        </if>
    </select>

    <select id="countByFile" resultType="int" parameterType="hashmap">
        SELECT COUNT(*) FROM `benefit` r
        WHERE r.`request_file_id` = #{requestFileId} AND r.`status` IN
        <foreach collection="statuses" item="status" open="(" close=")" separator=",">
            #{status}
        </foreach>
    </select>

    <update id="updateStatusForFile" parameterType="_long">
        UPDATE `benefit` b SET b.`status` =
        (SELECT p.`status` FROM `payment` p, `request_file` bf, `request_file` pf
            WHERE (b.`OWN_NUM_SR` = p.`OWN_NUM_SR`) AND (bf.`id` = b.request_file_id) AND (pf.`id` = p.`request_file_id`) AND
            (bf.`organization_object_id` = pf.`organization_object_id`) AND (EXTRACT(YEAR_MONTH FROM bf.`date`) = EXTRACT(YEAR_MONTH FROM pf.`date`)))
        WHERE b.`request_file_id` = #{requestFileId}
    </update>

    <update id="addressCorrected" parameterType="_long">
        UPDATE `benefit` b SET b.`status` = 'ADDRESS_CORRECTED'
        WHERE b.`OWN_NUM_SR` = (SELECT p.`OWN_NUM_SR`
                                FROM `payment` p, `request_file` pf, `request_file` bf
                                WHERE (p.`request_file_id` = pf.`id`) AND (b.`request_file_id` = bf.`id`) AND (p.`id` = #{paymentId}) AND
                                (bf.`organization_object_id` = pf.`organization_object_id`) AND (EXTRACT(YEAR_MONTH FROM bf.`date`) = EXTRACT(YEAR_MONTH FROM pf.`date`))
                               )
           
    </update>

    <update id="updateAccountNumber" parameterType="hashmap">
        UPDATE `benefit` b SET b.`account_number` = #{accountNumber}
        WHERE b.`OWN_NUM_SR` = (SELECT p.`OWN_NUM_SR`
                                FROM `payment` p, `request_file` pf, `request_file` bf
                                WHERE (p.`request_file_id` = pf.`id`) AND (b.`request_file_id` = bf.`id`) AND (p.`id` = #{paymentId}) AND
                                (bf.`organization_object_id` = pf.`organization_object_id`) AND (EXTRACT(YEAR_MONTH FROM bf.`date`) = EXTRACT(YEAR_MONTH FROM pf.`date`))
                               )

    </update>

</mapper>