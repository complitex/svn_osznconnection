<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.dictionaryfw.entity.DomainObject">

    <resultMap id="DomainObject" type="DomainObject">
        <id column="object_id" property="id"/>
        <id column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="status" property="status"/>
        <result column="parent_id" property="parentId"/>
        <result column="parent_entity_id" property="parentEntityId"/>
        <result column="entity_type_id" property="entityTypeId"/>
    </resultMap>

    <insert id="insert" parameterType="Parameter">
        INSERT INTO `${table}` (`object_id`, `status`, `start_date`, `end_date`, `parent_id`, `parent_entity_id`, `entity_type_id`) VALUES
        (#{object.id}, #{object.status}, #{object.startDate}, #{object.endDate}, #{object.parentId}, #{object.parentEntityId}, #{object.entityTypeId})
    </insert>

    <select id="findById" resultMap="org.complitex.dictionaryfw.entity.DomainObject.DomainObject" parameterType="DomainObjectExample">
        SELECT e.*
        FROM `${table}` e WHERE (e.`status` IN ('ACTIVE', 'INACTIVE')) AND e.`object_id` = #{id}
    </select>

    <sql id="statusFilter">
        <choose>
            <when test="status == 'ALL'">
                (e.`status` IN ('ACTIVE', 'INACTIVE'))
            </when>
            <otherwise>
                e.`status` = #{status}
            </otherwise>
        </choose>
    </sql>

    <sql id="orderBy">
        <choose>
            <when test="orderByAttributeTypeId != null">
                ORDER BY (
                    SELECT sc.`value` FROM `${table}_string_culture` sc WHERE sc.`locale_id` = #{localeId} AND sc.`id` =
                    (SELECT orderByAttr.`value_id` FROM `${table}_attribute` orderByAttr WHERE orderByAttr.`object_id` = e.`object_id`
                        AND orderByAttr.`status` = 'ACTIVE' AND orderByAttr.`attribute_type_id` = #{orderByAttributeTypeId}
                    )
                )
                <choose>
                    <when test="asc">
                        ASC
                    </when>
                    <otherwise>
                        DESC
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <if test="orderByExpression != null">
                    ORDER BY ${orderByExpression}
                    <choose>
                        <when test="asc">
                            ASC
                        </when>
                        <otherwise>
                            DESC
                        </otherwise>
                    </choose>
                </if>
            </otherwise>
        </choose>
    </sql>

    <select id="find" resultMap="org.complitex.dictionaryfw.entity.DomainObject.DomainObject" parameterType="DomainObjectExample">
        SELECT e.*
        FROM `${table}` e WHERE
        <include refid="org.complitex.dictionaryfw.entity.DomainObject.statusFilter"/>
        <include refid="org.complitex.dictionaryfw.entity.DomainObject.filter"/>
        <include refid="org.complitex.dictionaryfw.entity.DomainObject.orderBy"/>
        <include refid="org.complitex.dictionaryfw.entity.DomainObject.limit"/>
    </select>

    <sql id="filter">
        <if test="id != null">
            AND e.`object_id` = #{id}
        </if>
        <foreach item="attrExample" collection="attributeExamples">
            <if test="attrExample.value != null">
                AND EXISTS(SELECT 1 FROM `${table}_attribute` attr WHERE attr.`object_id` = e.`object_id`
                    AND attr.`status` = 'ACTIVE' AND attr.`attribute_type_id` = #{attrExample.attributeTypeId}
                    AND attr.`value_id` IN (SELECT sc.`id` FROM `${table}_string_culture` sc WHERE sc.`value`
                        <choose>
                            <when test="comparisonType == 'LIKE'">
                                LIKE '%${attrExample.value}%'
                            </when>
                            <when test="comparisonType == 'EQUALITY'">
                                = #{attrExample.value}
                            </when>
                        </choose>
                    )
                )
            </if>
        </foreach>
        <if test="parentId != null and parentEntity != null">
            AND e.`parent_entity_id` = (SELECT ent.`id` FROM `entity` ent WHERE ent.`entity_table` = #{parentEntity}) AND e.`parent_id` = #{parentId}
        </if>
        <if test="entityTypeId != null">
            AND e.`entity_type_id` = #{entityTypeId}
        </if>
    </sql>

    <select id="count" resultType="integer" parameterType="DomainObjectExample">
        SELECT COUNT(*) FROM `${table}` e WHERE
        <include refid="org.complitex.dictionaryfw.entity.DomainObject.statusFilter"/>
        <include refid="org.complitex.dictionaryfw.entity.DomainObject.filter"/>
    </select>

    <sql id="limit">
        <if test="size > 0">
            limit ${start},${size}
        </if>
    </sql>

    <update id="update" parameterType="Parameter">
        UPDATE `${table}` SET `end_date` = #{object.endDate}, `status` = #{object.status} WHERE `object_id` = #{object.id}
            AND `start_date` = #{object.startDate}
    </update>

    <!-- Validation -->

    <!-- Default validation -->
    <select id="defaultValidation" resultType="long" parameterType="map">
        SELECT DISTINCT e.`object_id` FROM `${entity}` e
                                    JOIN `${entity}_attribute` a ON (e.`object_id` = a.`object_id` AND a.`status` = 'ACTIVE')
                                    JOIN `${entity}_string_culture` sc ON (a.`value_id` = sc.`id`)
            WHERE (e.`status` IN ('ACTIVE', 'INACTIVE')) AND sc.`locale_id` = #{localeId} AND a.`attribute_type_id` = #{attributeTypeId}
            AND sc.`value` = #{text}
            <choose>
                <when test="parentEntityId != null and parentId != null">
                    AND e.`parent_entity_id` = #{parentEntityId} AND e.`parent_id` = #{parentId}
                </when>
                <otherwise>
                    AND e.`parent_entity_id` IS NULL AND e.`parent_id` IS NULL
                </otherwise>
            </choose>
            <choose>
                <when test="entityTypeId != null">
                    AND e.`entity_type_id` = #{entityTypeId}
                </when>
                <otherwise>
                     AND e.`entity_type_id` IS NULL
                </otherwise>
            </choose>
    </select>

    <!-- SearchComponent -->

    <select id="findParentInSearchComponent" parameterType="hashmap" resultType="hashmap">
        SELECT (SELECT ent.`entity_table` FROM `entity` ent WHERE ent.`id` = e.`parent_entity_id`) parentEntity,
            e.`parent_id` parentId FROM `${table}` e WHERE e.`object_id` = #{id}
        <choose>
            <when test="startDate != null">
                AND e.`start_date` =
                    (SELECT MAX(e1.`start_date`) FROM `${table}` e1 WHERE e1.`object_id` = #{id} AND e1.`start_date` <![CDATA[ <= ]]> #{startDate})
            </when>
            <otherwise>
                AND (e.`status` IN ('ACTIVE', 'INACTIVE'))
            </otherwise>
        </choose>
    </select>

    <!-- history -->

    <select id="historyDates" resultType="date" parameterType="DomainObjectExample">
        SELECT e.`start_date` FROM `${table}` e WHERE e.`object_id`= #{id}
        UNION
        SELECT e.`end_date` FROM `${table}` e WHERE e.`object_id`= #{id}
        UNION
        SELECT aa.`start_date` FROM `${table}_attribute` aa WHERE aa.`object_id`= #{id}
        UNION
        SELECT aa.`end_date` FROM `${table}_attribute` aa WHERE aa.`object_id`= #{id}
    </select>

    <sql id="findHistoryObject">
        SELECT e.*
        FROM `${table}` e WHERE e.`object_id` = #{id} AND e.`start_date` = (
            SELECT MAX(e1.`start_date`) FROM `${table}` e1 WHERE e1.`object_id` = #{id} AND e1.`start_date` <![CDATA[ <= ]]> #{startDate})
    </sql>

    <select id="findHistoryObject" parameterType="DomainObjectExample" resultMap="org.complitex.dictionaryfw.entity.DomainObject.DomainObject">
        <include refid="org.complitex.dictionaryfw.entity.DomainObject.findHistoryObject"/>
    </select>

</mapper>
