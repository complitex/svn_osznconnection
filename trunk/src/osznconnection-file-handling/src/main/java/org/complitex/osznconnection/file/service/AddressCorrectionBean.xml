<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.osznconnection.file.service.AddressCorrectionBean">
    <resultMap id="cityCorrection" type="org.complitex.osznconnection.file.entity.Correction"
               extends="org.complitex.osznconnection.file.service.CorrectionBean.correction">
    </resultMap>

    <resultMap id="streetCorrection" type="org.complitex.osznconnection.file.entity.Correction"
               extends="org.complitex.osznconnection.file.service.CorrectionBean.correction">
        <association property="parent" column="parent_id" select="selectCityCorrection"
                javaType="org.complitex.osznconnection.file.entity.Correction"/>
    </resultMap>

    <resultMap id="buildingCorrection" type="org.complitex.osznconnection.file.entity.BuildingCorrection"
               extends="org.complitex.osznconnection.file.service.CorrectionBean.correction">
        <result column="correction_corp" property="correctionCorp"/>

        <association property="parent" column="parent_id" select="selectStreetCorrection"
                     javaType="org.complitex.osznconnection.file.entity.Correction"/>
    </resultMap>

    <select id="selectCityCorrection" resultMap="cityCorrection" parameterType="long">
        select * from `city_correction` where `id` = #{id}
    </select>

    <select id="selectStreetCorrection" resultMap="streetCorrection" parameterType="long">
        select * from `street_correction` where `id` = #{id}
    </select>

    <select id="selectBuildingCorrection" resultMap="buildingCorrection" parameterType="long">
        select * from `building_correction` where `id` = #{id}
    </select>

    <select id="findCorrectionAddress" parameterType="map"
             resultMap="org.complitex.osznconnection.file.service.CorrectionBean.correction">
        SELECT
            *
        FROM
            `${entityTable}_correction`
        <where>
            `organization_id` = #{organizationId} AND TRIM(`correction`) = TRIM(#{correction})
            <if test="parentId != null">
                AND `parent_id` = #{parentId}
            </if>
        </where>
    </select>

    <select id="findCorrectionBuilding" parameterType="map" resultMap="buildingCorrection">
        SELECT
            *
        FROM
            `building_correction`
        WHERE
            `organization_id` = #{organizationId} AND TRIM(`correction`) = TRIM(#{correction})
                AND TRIM(`correction_corp`) = TRIM(#{correctionCorp}) AND `parent_id` = #{parentId}
    </select>

    <select id="findCorrectionEntityType" resultType="long" parameterType="long">
        SELECT etc.`entity_type_id` typeId
        FROM `entity_type_correction` etc
        WHERE etc.`organization_id` = #{organizationId}
        AND EXISTS(SELECT 1 FROM `entity_type` et WHERE et.`id` = etc.`entity_type_id` AND et.`end_date` IS NULL)
    </select>

    <insert id="insertBuilding" parameterType="org.complitex.osznconnection.file.entity.BuildingCorrection">
        INSERT INTO `building_correction`(`organization_id`, `parent_id`, `correction`, `correction_corp`, `object_id`,
            `organization_code`, `internal_organization_id`)
         VALUES (#{organizationId}, #{parentId}, #{correction}, #{correctionCorp}, #{objectId}, #{code},
            #{internalOrganizationId})
    </insert>

    <select id="findOutgoingAddress" resultMap="org.complitex.osznconnection.file.service.CorrectionBean.correction"
            parameterType="org.complitex.osznconnection.file.entity.example.CorrectionExample">
        SELECT c.`correction`, c.`organization_code` FROM `${entity}_correction` c
        WHERE c.`organization_id` = #{organizationId}
        AND c.`object_id` = #{objectId}
    </select>

    <select id="findOutgoingBuilding" resultMap="org.complitex.osznconnection.file.service.AddressCorrectionBean.buildingCorrection"
            parameterType="org.complitex.osznconnection.file.entity.example.CorrectionExample">
        SELECT c.`correction`, c.`correction_corp`, c.`organization_code` FROM `building_correction` c
        WHERE c.`organization_id` = #{organizationId}
        AND c.`object_id` = #{objectId}
    </select>

    <select id="findOutgoingDistrict" resultMap="org.complitex.osznconnection.file.service.CorrectionBean.correction"
            parameterType="hashmap">
        SELECT c.`correction`, c.`organization_code` FROM `district_correction` c
        WHERE c.`organization_id` = #{calculationCenterId}
        AND c.`object_id` = (SELECT oa.`value_id` FROM `organization_attribute` oa WHERE
        oa.`status` = 'ACTIVE' AND oa.`attribute_type_id` = 902
        AND oa.`object_id` = #{osznId})
    </select>

    <select id="findInternalObjectId" parameterType="hashmap" resultType="long">
        SELECT DISTINCT e.`object_id` FROM `${entity}` e WHERE e.`status` = 'ACTIVE'
        <if test="parentId != null">
            AND e.`parent_id` = #{parentId}
        </if>
        AND EXISTS(
        SELECT 1 FROM `${entity}_attribute` attr WHERE attr.`status` = 'ACTIVE' AND e.`object_id` = attr.`object_id`
        AND attr.`attribute_type_id` = #{attributeTypeId}
        AND attr.`value_id` IN (
        SELECT sc.`id` FROM `${entity}_string_culture` sc WHERE sc.`value` = TRIM(TO_CYRILLIC(#{correction}))))
    </select>

    <select id="findInternalBuilding" parameterType="hashmap" resultType="long">
        SELECT DISTINCT b.`object_id` FROM `building` b
            JOIN `building_address` addr ON (((b.`parent_id` = addr.`object_id`) OR
            EXISTS(SELECT 1 FROM `building_attribute` ba WHERE ba.`object_id` = b.`object_id` AND ba.`status` = 'ACTIVE' AND ba.`attribute_type_id` = 501
            AND ba.`value_id` = addr.`object_id`)) AND addr.`status` = 'ACTIVE')
            JOIN `building_address_attribute` num ON (num.`object_id` = addr.`object_id` AND num.`status` = 'ACTIVE' AND num.`attribute_type_id` = 1500)
            LEFT JOIN `building_address_attribute` corp ON (corp.`object_id` = addr.`object_id` AND corp.`status` = 'ACTIVE' AND corp.`attribute_type_id` = 1501)

        WHERE b.`status` = 'ACTIVE'
        AND
        num.`value_id` IN (SELECT sc.`id` FROM `building_address_string_culture` sc WHERE sc.`value` = TO_CYRILLIC(#{number}))
        AND
            <choose>
                <when test="corp == null">
                    corp.`value_id` IS NULL
                </when>
                <otherwise>
                    corp.`value_id` IN (SELECT sc.`id` FROM `building_address_string_culture` sc WHERE sc.`value` = TO_CYRILLIC(#{corp}))
                </otherwise>
            </choose>
        AND
        addr.`parent_entity_id` = #{parentEntityId} AND addr.`parent_id` = #{parentId}
    </select>

    <update id="updateBuilding" parameterType="org.complitex.osznconnection.file.entity.BuildingCorrection">
        UPDATE `building_correction` SET `organization_id` = #{organizationId}, `correction` = #{correction}, `correction_corp` = #{correctionCorp},
        `object_id` = #{objectId}, `organization_code` = #{code}, `internal_organization_id` = #{internalOrganizationId}
        WHERE `id` = #{id}
    </update>

    <select id="findBuildingById" parameterType="_long" resultMap="buildingCorrection">
        SELECT * FROM `building_correction` WHERE `id` = #{id}
    </select>

    <sql id="buildingFilter">
        <where>
            <if test="internalObject != null">
                <if test="cityObject != null">
                    and csc.`value` LIKE CONCAT('%', #{cityObject}, '%')
                </if>
                <if test="streetObject != null">
                    and ssc.`value` LIKE CONCAT('%', #{streetObject}, '%')
                </if>
                <if test="buildingObject != null">
                    and basc.`value` LIKE CONCAT('%', #{buildingObject}, '%')
                </if>
                <if test="smallObject">
                    and (csc.`value` LIKE CONCAT('%', #{internalObject}, '%')
                         or ssc.`value` LIKE CONCAT('%', #{internalObject}, '%')
                         or basc.`value` LIKE CONCAT('%', #{internalObject}, '%'))
                </if>
            </if>
            <if test="correction != null">
                <if test="cityCorrection != null">
                    and cc.`correction` LIKE CONCAT('%', #{cityCorrection}, '%')
                </if>
                <if test="streetCorrection != null">
                    and sc.`correction` LIKE CONCAT('%', #{streetCorrection}, '%')
                </if>
                <if test="buildingCorrection != null">
                    and c.`correction` LIKE CONCAT('%', #{buildingCorrection}, '%')
                </if>
                <if test="smallCorrection">
                    and (cc.`correction` LIKE CONCAT('%', #{correction}, '%')
                         or sc.`correction` LIKE CONCAT('%', #{correction}, '%')
                         or c.`correction` LIKE CONCAT('%', #{correction}, '%'))
                </if>
            </if>

            <if test="code != null">
                and c.`organization_code` LIKE CONCAT('%', #{code}, '%')
            </if>
            <if test="organizationId != null">
                and c.`organization_id` = #{organizationId}
            </if>
            <if test="internalOrganizationId != null">
                and c.`internal_organization_id` = #{internalOrganizationId}
            </if>
        </where>
    </sql>

    <sql id="buildingJoin">
        left join `organization_attribute` oa on (oa.`object_id` = c.`organization_id`
            and oa.`status` = 'ACTIVE' and oa.`attribute_type_id` = 900)
        left join `organization_string_culture` osc on (osc.`id` = oa.`value_id` and osc.`locale_id` = #{localeId})
        LEFT JOIN `organization_string_culture` osc_sys ON (osc_sys.`id` = oa.`value_id` and osc_sys.`locale_id` = (SELECT l.`id` FROM `locales` l WHERE l.`system` = 1))

        left join `organization_attribute` oa_i on (oa_i.`object_id` = c.`internal_organization_id`
            and oa_i.`status` = 'ACTIVE' and oa_i.`attribute_type_id` = 900)
        left join `organization_string_culture` osc_i on (osc_i.`id` = oa_i.`value_id` and osc_i.`locale_id` = #{localeId})
        LEFT JOIN `organization_string_culture` osc_i_sys ON (osc_i_sys.`id` = oa.`value_id` and osc_i_sys.`locale_id` = (SELECT l.`id` FROM `locales` l WHERE l.`system` = 1))

        <if test="orderByClause == 'object' or internalObject != null">
            left join `building` b on (b.`object_id` = c.`object_id`)
            left join `building_address` ba on (ba.`object_id` = b.`parent_id`)
            left join `building_address_attribute` baa on (baa.`object_id` = ba.`object_id` and baa.`attribute_type_id` = 1500)
            left join `building_address_string_culture` basc on (basc.`id` = baa.`value_id` and basc.`locale_id` = #{localeId})

            left join `street` s on (s.`object_id` = ba.`parent_id`)
            left join `street_attribute` sa on (sa.`object_id` = ba.`parent_id`)
            left join `street_string_culture` ssc on (ssc.`id` = sa.`value_id` and ssc.`locale_id` = #{localeId})

            left join `city` on (`city`.`object_id` = s.`parent_id`)
            left join `city_attribute` ca on (ca.`object_id` = s.`parent_id`)
            left join `city_string_culture` csc on (csc.`id` = ca.`value_id` and csc.`locale_id` = #{localeId})
        </if>

        <if test="orderByClause == 'correction' or correction != null">
            left join `street_correction` sc on (sc.`id` = c.`parent_id`)
            left join `city_correction` cc on (cc.`id` = sc.`parent_id`)
        </if>
    </sql>

    <select id="findBuildings" parameterType="org.complitex.osznconnection.file.entity.example.BuildingCorrectionExample"
            resultMap="buildingCorrection">
        SELECT distinct c.`id`, c.*, IFNULL(osc.`value`, osc_sys.`value`) organization, IFNULL(osc_i.`value`, osc_i_sys.`value`) internalOrganization

        FROM `building_correction` c

        <include refid="buildingJoin"/>

        <include refid="buildingFilter"/>

        <if test="orderByClause != null">
            ORDER BY
            <choose>
                <when test="orderByClause == 'object'">
                    csc.`value` <include refid="asc"/>, ssc.`value` <include refid="asc"/>, basc.`value` + 0 <include refid="asc"/>
                </when>
                <when test="orderByClause == 'correction'">
                    cc.`correction` <include refid="asc"/>, sc.`correction` <include refid="asc"/>, c.`correction` + 0 <include refid="asc"/>
                </when>
                <otherwise>
                    ${orderByClause} <include refid="asc"/>
                </otherwise>
            </choose>
        </if>
        LIMIT #{start},#{size}
    </select>

    <sql id="asc">
        <choose><when test="asc">ASC</when><otherwise>DESC</otherwise></choose>
    </sql>

    <select id="countBuildings" resultType="int" parameterType="org.complitex.osznconnection.file.entity.example.CorrectionExample">
        SELECT COUNT(distinct c.`id`) FROM `building_correction` c
        <include refid="buildingJoin"/>

        <include refid="buildingFilter"/>
    </select>

    <delete id="deleteBuilding" parameterType="org.complitex.osznconnection.file.entity.BuildingCorrection">
        DELETE FROM `building_correction` WHERE `id` = #{id}
    </delete>

</mapper>