<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.osznconnection.file.service.PaymentBean">

    <resultMap id="paymentResultMap" type="org.complitex.osznconnection.file.entity.Payment">
        <id column="id" property="id"/>
        <result column="request_file_id" property="requestFileId"/>
        <result column="account_number" property="accountNumber"/>

        <result column="internal_city_id" property="internalCityId"/>
        <result column="internal_street_id" property="internalStreetId"/>
        <result column="internal_street_type_id" property="internalStreetTypeId"/>
        <result column="internal_building_id" property="internalBuildingId"/>
        <result column="internal_apartment_id" property="internalApartmentId"/>

        <result column="outgoing_city" property="outgoingCity"/>
        <result column="outgoing_district" property="outgoingDistrict"/>
        <result column="outgoing_street" property="outgoingStreet"/>
        <result column="outgoing_street_type" property="outgoingStreetType"/>
        <result column="outgoing_building_number" property="outgoingBuildingNumber"/>
        <result column="outgoing_building_corp" property="outgoingBuildingCorp"/>
        <result column="outgoing_apartment" property="outgoingApartment"/>

        <result column="status" property="status"/>
        <result column="organization_id" property="organizationId"/>
        <result column="calc_center_code2_1" property="calculationCenterCode2_1"/>

        <association property="dbfFields" javaType="map">
            <result column="OWN_NUM" property="OWN_NUM"/>
            <result column="REE_NUM" property="REE_NUM"/>
            <result column="OPP" property="OPP"/>
            <result column="NUMB" property="NUMB"/>
            <result column="MARK" property="MARK"/>
            <result column="CODE" property="CODE"/>
            <result column="ENT_COD" property="ENT_COD"/>
            <result column="FROG" property="FROG"/>
            <result column="FL_PAY" property="FL_PAY"/>
            <result column="NM_PAY" property="NM_PAY"/>
            <result column="DEBT" property="DEBT"/>
            <result column="CODE2_1" property="CODE2_1"/>
            <result column="CODE2_2" property="CODE2_2"/>
            <result column="CODE2_3" property="CODE2_3"/>
            <result column="CODE2_4" property="CODE2_4"/>
            <result column="CODE2_5" property="CODE2_5"/>
            <result column="CODE2_6" property="CODE2_6"/>
            <result column="CODE2_7" property="CODE2_7"/>
            <result column="CODE2_8" property="CODE2_8"/>
            <result column="NORM_F_1" property="NORM_F_1"/>
            <result column="NORM_F_2" property="NORM_F_2"/>
            <result column="NORM_F_3" property="NORM_F_3"/>
            <result column="NORM_F_4" property="NORM_F_4"/>
            <result column="NORM_F_5" property="NORM_F_5"/>
            <result column="NORM_F_6" property="NORM_F_6"/>
            <result column="NORM_F_7" property="NORM_F_7"/>
            <result column="NORM_F_8" property="NORM_F_8"/>
            <result column="OWN_NUM_SR" property="OWN_NUM_SR"/>
            <result column="DAT1" property="DAT1"/>
            <result column="DAT2" property="DAT2"/>
            <result column="OZN_PRZ" property="OZN_PRZ"/>
            <result column="DAT_F_1" property="DAT_F_1"/>
            <result column="DAT_F_2" property="DAT_F_2"/>
            <result column="DAT_FOP_1" property="DAT_FOP_1"/>
            <result column="DAT_FOP_2" property="DAT_FOP_2"/>
            <result column="ID_RAJ" property="ID_RAJ"/>
            <result column="SUR_NAM" property="SUR_NAM"/>
            <result column="F_NAM" property="F_NAM"/>
            <result column="M_NAM" property="M_NAM"/>
            <result column="IND_COD" property="IND_COD"/>
            <result column="INDX" property="INDX"/>
            <result column="N_NAME" property="N_NAME"/>
            <result column="VUL_NAME" property="VUL_NAME"/>
            <result column="BLD_NUM" property="BLD_NUM"/>
            <result column="CORP_NUM" property="CORP_NUM"/>
            <result column="FLAT" property="FLAT"/>
            <result column="CODE3_1" property="CODE3_1"/>
            <result column="CODE3_2" property="CODE3_2"/>
            <result column="CODE3_3" property="CODE3_3"/>
            <result column="CODE3_4" property="CODE3_4"/>
            <result column="CODE3_5" property="CODE3_5"/>
            <result column="CODE3_6" property="CODE3_6"/>
            <result column="CODE3_7" property="CODE3_7"/>
            <result column="CODE3_8" property="CODE3_8"/>
            <result column="OPP_SERV" property="OPP_SERV"/>
            <result column="RESERV1" property="RESERV1"/>
            <result column="RESERV2" property="RESERV2"/>
        </association>
    </resultMap>

    <select id="selectPayments" resultMap="paymentResultMap" parameterType="long">
        select * from `payment` where `request_file_id` = #{id}
    </select>

    <insert id="insertPayment" parameterType="org.complitex.osznconnection.file.entity.Payment">
        insert into `payment`
        (
        <trim suffixOverrides=",">
            `request_file_id`, `account_number`,
            `internal_city_id`, `internal_street_id`, `internal_street_type_id`, `internal_building_id`, `internal_apartment_id`,
            `outgoing_city`, `outgoing_street`, `outgoing_street_type`, `outgoing_building_number`, `outgoing_building_corp`, `outgoing_apartment`,
            `status`,
            <foreach collection="dbfFields.keys" item="key">
                `${key}`,
            </foreach>
        </trim>
        )
        values
        (
        <trim suffixOverrides=",">
            #{requestFileId}, #{accountNumber},
            #{internalCityId}, #{internalStreetId}, #{internalStreetTypeId}, #{internalBuildingId}, #{internalApartmentId},
            #{outgoingCity}, #{outgoingStreet}, #{outgoingStreetType}, #{outgoingBuildingNumber}, #{outgoingBuildingCorp}, #{outgoingApartment},
            #{status},
            <foreach collection="dbfFields.keys" item="key">
                #{dbfFields.${key}},
            </foreach>
        </trim>
        )
    </insert>

    <insert id="insertPaymentList" parameterType="list">
        insert into `payment`
        (
        <trim suffixOverrides=",">
            `request_file_id`, `account_number`,
            `internal_city_id`, `internal_street_id`, `internal_street_type_id`, `internal_building_id`, `internal_apartment_id`,
            `outgoing_city`, `outgoing_street`, `outgoing_street_type`, `outgoing_building_number`, `outgoing_building_corp`, `outgoing_apartment`,
            `status`,
            <foreach collection="list[0].dbfFields.keys" item="key">
                `${key}`,
            </foreach>
        </trim>
        )
        values
        <foreach collection="list" separator="," item="item">
            (
            <trim suffixOverrides=",">
                #{item.requestFileId}, #{item.accountNumber},
                #{item.internalCityId}, #{item.internalStreetId}, #{item.internalStreetTypeId}, #{item.internalBuildingId}, #{item.internalApartmentId},
                #{item.outgoingCity}, #{item.outgoingStreet}, #{item.outgoingStreetType}, #{item.outgoingBuildingNumber}, #{item.outgoingBuildingCorp}, #{item.outgoingApartment},
                #{item.status},
                <foreach collection="item.dbfFields.keys" item="key">
                    #{item.dbfFields.${key}},
                </foreach>
            </trim>
            )
        </foreach>
    </insert>

    <update id="updatePayment" parameterType="org.complitex.osznconnection.file.entity.Payment">
        update `payment`
        <set>
            `request_file_id` = #{requestFileId}, `account_number` = #{accountNumber},
            `internal_city_id` = #{internalCityId},
            `internal_street_id` = #{internalStreetId}, `internal_street_type_id` = #{internalStreetTypeId},
            `internal_building_id` = #{internalBuildingId}, `internal_apartment_id` = #{internalApartmentId},
            `outgoing_city` = #{outgoingCity}, `outgoing_district` = #{outgoingDistrict},
            `outgoing_street` = #{outgoingStreet}, `outgoing_street_type` = #{outgoingStreetType},
            `outgoing_building_number` = #{outgoingBuildingNumber}, `outgoing_building_corp` = #{outgoingBuildingCorp},
            `outgoing_apartment` = #{outgoingApartment},
            `status` = #{status},
            <foreach collection="dbfFields.keys" item="key" separator=",">
                `${key}` = #{dbfFields[key]}
            </foreach>
        </set>
        where
        `id` = #{id}
    </update>

    <delete id="deletePayments" parameterType="long">
        delete from `payment` where `request_file_id` = #{id};
    </delete>

    <sql id="filter">
        <if test="account != null">
            AND r.`OWN_NUM_SR` LIKE CONCAT('%',#{account},'%')
        </if>
        <if test="firstName != null">
            AND r.`F_NAM` LIKE CONCAT('%',#{firstName},'%')
        </if>
        <if test="middleName != null">
            AND r.`M_NAM` LIKE CONCAT('%',#{middleName},'%')
        </if>
        <if test="lastName != null">
            AND r.`SUR_NAM` LIKE CONCAT('%',#{lastName},'%')
        </if>

        <if test="city != null">
            AND r.`N_NAME` LIKE CONCAT('%', #{city}, '%')
        </if>
        <if test="street != null">
            AND r.`VUL_NAME` LIKE CONCAT('%', #{street}, '%')
        </if>
        <if test="building != null">
            AND r.`BLD_NUM` LIKE CONCAT('%', #{building}, '%')
        </if>
        <if test="corp != null">
            AND r.`CORP_NUM` LIKE CONCAT('%', #{corp}, '%')
        </if>
        <if test="apartment != null">
            AND r.`FLAT` LIKE CONCAT('%', #{apartment}, '%')
        </if>

        <if test="status != null">
            AND r.`status` = #{status}
        </if>
    </sql>

    <select id="count" resultType="int" parameterType="org.complitex.osznconnection.file.entity.example.PaymentExample">
        SELECT COUNT(*) FROM `payment` r WHERE r.`request_file_id` = #{requestFileId}
        <include refid="org.complitex.osznconnection.file.service.PaymentBean.filter"/>
    </select>

    <select id="find" parameterType="org.complitex.osznconnection.file.entity.example.PaymentExample"
            resultMap="paymentResultMap">
        SELECT r.`id`, r.`status`, r.`request_file_id`, r.`OWN_NUM_SR`, r.`F_NAM`, r.`M_NAM`, r.`SUR_NAM`,
        r.`N_NAME`, r.`VUL_NAME`, r.`BLD_NUM`, r.`CORP_NUM`, r.`FLAT`, r.`DAT1`,
        (SELECT f.`organization_id` FROM `request_file` f WHERE f.`id` = r.`request_file_id`) organization_id,
        r.`internal_city_id`, r.`internal_street_id`, r.`internal_street_type_id`, r.`internal_building_id`, r.`internal_apartment_id`,
        r.`outgoing_city`, r.`outgoing_district`, r.`outgoing_street`, r.`outgoing_street_type`, r.`outgoing_building_number`, r.`outgoing_building_corp`,
        r.`outgoing_apartment`, r.`calc_center_code2_1`
        FROM `payment` r WHERE r.`request_file_id` = #{requestFileId}
        <include refid="org.complitex.osznconnection.file.service.PaymentBean.filter"/>
        <if test="orderByClause != null">
            ORDER BY ${orderByClause}
            <choose>
                <when test="asc">
                    ASC
                </when>
                <otherwise>
                    DESC
                </otherwise>
            </choose>
        </if>
        <if test="size != 0">
            limit #{start},#{size}
        </if>
    </select>

    <select id="findById" parameterType="long" resultMap="paymentResultMap">
        SELECT r.`id`, r.`status`, r.`request_file_id`, r.`OWN_NUM_SR`, r.`F_NAM`, r.`M_NAM`, r.`SUR_NAM`,
        r.`N_NAME`, r.`VUL_NAME`, r.`BLD_NUM`, r.`CORP_NUM`, r.`FLAT`, r.`OWN_NUM_SR`,
        (SELECT f.`organization_id` FROM `request_file` f WHERE f.`id` = r.`request_file_id`) organization_id,
        r.`internal_city_id`, r.`internal_street_id`, r.`internal_street_type_id`, r.`internal_building_id`, r.`internal_apartment_id`,
        r.`outgoing_city`, r.`outgoing_district`, r.`outgoing_street`, r.`outgoing_street_type`, r.`outgoing_building_number`, r.`outgoing_building_corp`,
        r.`outgoing_apartment`
        FROM `payment` r WHERE r.`id` = #{id}
    </select>

    <update id="update" parameterType="org.complitex.osznconnection.file.entity.Payment">
        UPDATE `payment` SET
        `account_number` = #{accountNumber},
        `internal_city_id` = #{internalCityId},
        `internal_street_id` = #{internalStreetId}, `internal_street_type_id` = #{internalStreetTypeId},
        `internal_building_id` = #{internalBuildingId}, `internal_apartment_id` = #{internalApartmentId},
        `outgoing_city` = #{outgoingCity}, `outgoing_district` = #{outgoingDistrict},
        `outgoing_street` = #{outgoingStreet}, `outgoing_street_type` = #{outgoingStreetType},
        `outgoing_building_number` = #{outgoingBuildingNumber}, `outgoing_building_corp` = #{outgoingBuildingCorp},
        `outgoing_apartment` = #{outgoingApartment},
        `FROG` = #{dbfFields.FROG},
        `FL_PAY` = #{dbfFields.FL_PAY},
        `NM_PAY` = #{dbfFields.NM_PAY},
        `DEBT` = #{dbfFields.DEBT},
        `NORM_F_1` = #{dbfFields.NORM_F_1},
        `NUMB` = #{dbfFields.NUMB},
        `MARK` = #{dbfFields.MARK},
        `OPP` = #{dbfFields.OPP},
        `CODE2_1` = #{dbfFields.CODE2_1},
        `calc_center_code2_1` = #{calculationCenterCode2_1},
        `status` = #{status}
        WHERE `id` = #{id}
    </update>

    <select id="countByFile" resultType="int" parameterType="hashmap">
        SELECT COUNT(*) FROM `payment` r
        WHERE r.`request_file_id` = #{requestFileId} AND r.`status` IN
        <foreach collection="statuses" item="status" open="(" close=")" separator=",">
            #{status}
        </foreach>
    </select>

    <select id="findForOperation" parameterType="hashmap" resultMap="paymentResultMap">
        SELECT r.`id`, r.`status`, r.`request_file_id`, r.`F_NAM`, r.`M_NAM`, r.`SUR_NAM`,
        r.`N_NAME`, r.`VUL_NAME`, r.`BLD_NUM`, r.`CORP_NUM`, r.`FLAT`, r.`DAT1`, r.`OWN_NUM_SR`,
        rf.`organization_id` organization_id,
        r.`internal_city_id`, r.`internal_street_id`, r.`internal_street_type_id`, r.`internal_building_id`, r.`internal_apartment_id`,
        r.`outgoing_city`, r.`outgoing_district`, r.`outgoing_street`, r.`outgoing_street_type`, r.`outgoing_building_number`, r.`outgoing_building_corp`,
        r.`outgoing_apartment`, r.`account_number`, r.`calc_center_code2_1`
        FROM `payment` r
        JOIN `request_file` rf ON r.`request_file_id` = rf.`id`
        WHERE r.`request_file_id` = #{requestFileId} AND r.`id` IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="findIdsForOperation" parameterType="long"
            resultType="long">
        SELECT r.`id`
        FROM `payment` r
        JOIN `request_file` rf ON r.`request_file_id` = rf.`id`
        WHERE r.`request_file_id` = #{requestFileId}
    </select>

    <update id="correct" parameterType="hashmap">
        update `payment`
        SET
        `internal_${addressEntity}_id` = #{objectId},
        <if test="entityTypeId != null">
            `internal_${addressEntity}_type_id` = #{entityTypeId},
        </if>
        `status` = #{status}
        where
        `request_file_id` = #{requestFileId}
        <if test="city != null">
            AND TO_CYRILLIC(`N_NAME`) = TO_CYRILLIC(#{city})
        </if>
        <if test="street != null">
            AND TO_CYRILLIC(`VUL_NAME`) = TO_CYRILLIC(#{street})
        </if>
        <if test="buildingNumber != null">
            AND TO_CYRILLIC(`BLD_NUM`) = TO_CYRILLIC(#{buildingNumber})
            <choose>
                <when test="buildingCorp == null">
                    AND `CORP_NUM` IS NULL
                </when>
                <otherwise>
                    AND TO_CYRILLIC(`CORP_NUM`) = TO_CYRILLIC(#{buildingCorp})
                </otherwise>
            </choose>
        </if>
        <if test="apartment != null">
            AND TO_CYRILLIC(`FLAT`) = TO_CYRILLIC(#{apartment})
        </if>

        <if test="cityId != null">
            AND `internal_city_id` = #{cityId}
        </if>
        <if test="streetId != null">
            AND `internal_street_id` = #{streetId}
        </if>
        <if test="buildingId != null">
            AND `internal_building_id` = #{buildingId}
        </if>
    </update>

    <update id="updateAccountNumber" parameterType="org.complitex.osznconnection.file.entity.Payment">
        UPDATE `payment` SET `account_number` = #{accountNumber}, `status` = #{status}
        WHERE `id` = #{id}
    </update>

    <update id="clearBeforeBinding" parameterType="org.complitex.osznconnection.file.entity.Payment">
        UPDATE `payment` SET
        `account_number` = #{accountNumber},
        `internal_city_id` = #{internalCityId},
        `internal_street_id` = #{internalStreetId}, `internal_street_type_id` = #{internalStreetTypeId},
        `internal_building_id` = #{internalBuildingId}, `internal_apartment_id` = #{internalApartmentId},
        `outgoing_city` = #{outgoingCity}, `outgoing_district` = #{outgoingDistrict},
        `outgoing_street` = #{outgoingStreet}, `outgoing_street_type` = #{outgoingStreetType},
        `outgoing_building_number` = #{outgoingBuildingNumber}, `outgoing_building_corp` = #{outgoingBuildingCorp},
        `outgoing_apartment` = #{outgoingApartment},
        `FROG` = #{dbfFields.FROG},
        `FL_PAY` = #{dbfFields.FL_PAY},
        `NM_PAY` = #{dbfFields.NM_PAY},
        `DEBT` = #{dbfFields.DEBT},
        `NORM_F_1` = #{dbfFields.NORM_F_1},
        `NUMB` = #{dbfFields.NUMB},
        `MARK` = #{dbfFields.MARK},
        `OPP` = #{dbfFields.OPP},
        `CODE2_1` = #{dbfFields.CODE2_1},
        `calc_center_code2_1` = #{calculationCenterCode2_1},
        `status` = #{status}
        WHERE `request_file_id` = #{requestFileId}
    </update>

    <update id="clearBeforeProcessing" parameterType="hashmap">
        UPDATE `payment` p SET
        p.`FROG` = NULL,
        p.`FL_PAY` = NULL,
        p.`NM_PAY` = NULL,
        p.`DEBT` = NULL,
        p.`NORM_F_1` = NULL,
        p.`NUMB` = NULL,
        p.`MARK` = NULL,
        p.`OPP` = NULL,
        p.`CODE2_1` = NULL,
        p.`calc_center_code2_1` = NULL,
        p.`status` = CASE p.`status`
                        <foreach collection="statuses" item="status">
                            WHEN #{status} THEN #{status}
                        </foreach>
                        ELSE 214
                     END
        WHERE `request_file_id` = #{fileId}
    </update>

</mapper>